// Copyright 2017-2023 @polkadot/apps-config authors & contributors
// SPDX-License-Identifier: Apache-2.0

// Do not edit, auto-generated by @polkadot/apps-config

import type { OverrideBundleType } from '@polkadot/types/types';

/* eslint-disable quotes */
/* eslint-disable quote-props */
/* eslint-disable sort-keys */

export const typesBundle = {
  "chain": {
    "Dev. Node": {
      "runtime": {
        "Did": [
          {
            "methods": {
              "query": {
                "description": "Return the information relative to the owner of the provided DID, if present.",
                "params": [
                  {
                    "name": "did",
                    "type": "AccountId32"
                  }
                ],
                "type": "Option<RawDidLinkedInfo>"
              }
            },
            "version": 1
          }
        ]
      },
      "signedExtensions": {
        "CheckExtrinsicAuthor": {
          "extrinsic": {},
          "payload": {}
        },
        "PalletExtrinsicAuthorshipCheckExtrinsicAuthor": {
          "extrinsic": {},
          "payload": {}
        }
      },
      "types": [
        {
          "minmax": [
            0,
            7999
          ],
          "types": {
            "IdentifierOf": "Vec<u8>",
            "StreamIdOf": "IdentifierOf",
            "StreamDigestOf": "Hash",
            "SchemaIdOf": "IdentifierOf",
            "SchemaDigestOf": "Hash",
            "SwarmIdOf": "IdentifierOf",
            "CreatorOf": "AccountId",
            "StreamEntry": {
              "digest": "StreamDigestOf",
              "creator": "CreatorOf",
              "schema": "Option<SchemaIdOf>",
              "linked": "Option<StreamIdOf>",
              "swarm": "Option<SwarmIdOf>",
              "revoked": "bool",
              "counter": "u64"
            },
            "StreamCommitOf": {
              "_enum": [
                "Genesis",
                "Update",
                "Status"
              ]
            },
            "StreamCommit": {
              "commit": "StreamCommitOf",
              "digest": "StreamDigestOf",
              "block": "BlockNumber"
            },
            "KeyIdOf": "Hash",
            "DidIdentifierOf": "AccountId",
            "AccountIdentifierOf": "AccountId",
            "DidCallableOf": "Call",
            "DidVerificationKey": {
              "_enum": {
                "Ed25519": "[u8; 32]",
                "Sr25519": "[u8; 32]"
              }
            },
            "DidEncryptionKey": {
              "_enum": {
                "X25519": "[u8; 32]"
              }
            },
            "DidPublicKey": {
              "_enum": {
                "PublicVerificationKey": "DidVerificationKey",
                "PublicEncryptionKey": "DidEncryptionKey"
              }
            },
            "DidVerificationKeyRelationship": {
              "_enum": [
                "Authentication",
                "CapabilityDelegation",
                "CapabilityInvocation",
                "AssertionMethod"
              ]
            },
            "DidSignature": {
              "_enum": {
                "Ed25519": "Ed25519Signature",
                "Sr25519": "Sr25519Signature"
              }
            },
            "StorageError": {
              "_enum": {
                "DidAlreadyPresent": "Null",
                "DidNotPresent": "Null",
                "DidKeyNotPresent": "DidVerificationKeyRelationship",
                "KeyNotPresent": "Null",
                "CurrentlyActiveKey": "Null",
                "MaxPublicKeysPerDidExceeded": "Null",
                "MaxTotalKeyAgreementKeysExceeded": "Null",
                "DidAlreadyDeleted": "Null"
              }
            },
            "SignatureError": {
              "_enum": [
                "InvalidSignatureFormat",
                "InvalidSignature",
                "InvalidNonce",
                "TransactionExpired"
              ]
            },
            "KeyError": {
              "_enum": [
                "InvalidVerificationKeyFormat",
                "InvalidEncryptionKeyFormat"
              ]
            },
            "InputError": {
              "_enum": [
                "MaxKeyAgreementKeysLimitExceeded",
                "MaxVerificationKeysToRemoveLimitExceeded"
              ]
            },
            "DidPublicKeyDetails": {
              "key": "DidPublicKey",
              "blockNumber": "BlockNumber"
            },
            "DidNewKeyAgreementKeys": "BoundedBTreeSet<DidEncryptionKey, MaxNewKeyAgreementKeys>",
            "DidKeyAgreementKeys": "BoundedBTreeSet<KeyIdOf, MaxTotalKeyAgreementKeys>",
            "DidVerificationKeysToRevoke": "BoundedBTreeSet<KeyIdOf, MaxVerificationKeysToRevoke>",
            "MaxNewKeyAgreementKeys": "u32",
            "MaxTotalKeyAgreementKeys": "u32",
            "MaxVerificationKeysToRevoke": "u32",
            "MaxPublicKeysPerDid": "u32",
            "DidPublicKeyMap": "BoundedBTreeMap<KeyIdOf, DidPublicKeyDetails, MaxPublicKeysPerDid>",
            "DidCreationDetails": {
              "did": "DidIdentifierOf",
              "submitter": "AccountId",
              "newKeyAgreementKey": "DidEncryptionKey",
              "newAssertionKey": "Option<DidVerificationKey>",
              "newDelegationKey": "Option<DidVerificationKey>"
            },
            "DidDetails": {
              "authenticationKey": "KeyIdOf",
              "keyAgreementKeys": "DidKeyAgreementKeys",
              "capabilityDelegationKey": "Option<KeyIdOf>",
              "assertionMethodKey": "Option<KeyIdOf>",
              "publicKeys": "DidPublicKeyMap",
              "lastTxCounter": "u64"
            },
            "DidDeletionOperation": {
              "did": "DidIdentifierOf",
              "txCounter": "u64"
            },
            "DidAuthorizedCallOperation": {
              "did": "DidIdentifierOf",
              "txCounter": "u64",
              "call": "DidCallableOf",
              "blockNumber": "BlockNumber",
              "submitter": "AccountId"
            }
          }
        },
        {
          "minmax": [
            8000,
            null
          ],
          "types": {
            "RawDidLinkedInfo": {
              "identifier": "AccountId32",
              "w3n": "Option<Text>",
              "serviceEndpoints": "Vec<PalletDidServiceEndpointsDidEndpoint>",
              "details": "PalletDidDidDetails"
            }
          }
        }
      ]
    },
    "CORD Staging Testnet": {},
    "Development": {
      "runtime": {
        "Did": [
          {
            "methods": {
              "query": {
                "description": "Return the information relative to the owner of the provided DID, if present.",
                "params": [
                  {
                    "name": "did",
                    "type": "AccountId32"
                  }
                ],
                "type": "Option<RawDidLinkedInfo>"
              }
            },
            "version": 1
          }
        ]
      },
      "signedExtensions": {
        "CheckExtrinsicAuthor": {
          "extrinsic": {},
          "payload": {}
        },
        "PalletExtrinsicAuthorshipCheckExtrinsicAuthor": {
          "extrinsic": {},
          "payload": {}
        }
      },
      "types": [
        {
          "minmax": [
            0,
            7999
          ],
          "types": {
            "IdentifierOf": "Vec<u8>",
            "StreamIdOf": "IdentifierOf",
            "StreamDigestOf": "Hash",
            "SchemaIdOf": "IdentifierOf",
            "SchemaDigestOf": "Hash",
            "SwarmIdOf": "IdentifierOf",
            "CreatorOf": "AccountId",
            "StreamEntry": {
              "digest": "StreamDigestOf",
              "creator": "CreatorOf",
              "schema": "Option<SchemaIdOf>",
              "linked": "Option<StreamIdOf>",
              "swarm": "Option<SwarmIdOf>",
              "revoked": "bool",
              "counter": "u64"
            },
            "StreamCommitOf": {
              "_enum": [
                "Genesis",
                "Update",
                "Status"
              ]
            },
            "StreamCommit": {
              "commit": "StreamCommitOf",
              "digest": "StreamDigestOf",
              "block": "BlockNumber"
            },
            "KeyIdOf": "Hash",
            "DidIdentifierOf": "AccountId",
            "AccountIdentifierOf": "AccountId",
            "DidCallableOf": "Call",
            "DidVerificationKey": {
              "_enum": {
                "Ed25519": "[u8; 32]",
                "Sr25519": "[u8; 32]"
              }
            },
            "DidEncryptionKey": {
              "_enum": {
                "X25519": "[u8; 32]"
              }
            },
            "DidPublicKey": {
              "_enum": {
                "PublicVerificationKey": "DidVerificationKey",
                "PublicEncryptionKey": "DidEncryptionKey"
              }
            },
            "DidVerificationKeyRelationship": {
              "_enum": [
                "Authentication",
                "CapabilityDelegation",
                "CapabilityInvocation",
                "AssertionMethod"
              ]
            },
            "DidSignature": {
              "_enum": {
                "Ed25519": "Ed25519Signature",
                "Sr25519": "Sr25519Signature"
              }
            },
            "StorageError": {
              "_enum": {
                "DidAlreadyPresent": "Null",
                "DidNotPresent": "Null",
                "DidKeyNotPresent": "DidVerificationKeyRelationship",
                "KeyNotPresent": "Null",
                "CurrentlyActiveKey": "Null",
                "MaxPublicKeysPerDidExceeded": "Null",
                "MaxTotalKeyAgreementKeysExceeded": "Null",
                "DidAlreadyDeleted": "Null"
              }
            },
            "SignatureError": {
              "_enum": [
                "InvalidSignatureFormat",
                "InvalidSignature",
                "InvalidNonce",
                "TransactionExpired"
              ]
            },
            "KeyError": {
              "_enum": [
                "InvalidVerificationKeyFormat",
                "InvalidEncryptionKeyFormat"
              ]
            },
            "InputError": {
              "_enum": [
                "MaxKeyAgreementKeysLimitExceeded",
                "MaxVerificationKeysToRemoveLimitExceeded"
              ]
            },
            "DidPublicKeyDetails": {
              "key": "DidPublicKey",
              "blockNumber": "BlockNumber"
            },
            "DidNewKeyAgreementKeys": "BoundedBTreeSet<DidEncryptionKey, MaxNewKeyAgreementKeys>",
            "DidKeyAgreementKeys": "BoundedBTreeSet<KeyIdOf, MaxTotalKeyAgreementKeys>",
            "DidVerificationKeysToRevoke": "BoundedBTreeSet<KeyIdOf, MaxVerificationKeysToRevoke>",
            "MaxNewKeyAgreementKeys": "u32",
            "MaxTotalKeyAgreementKeys": "u32",
            "MaxVerificationKeysToRevoke": "u32",
            "MaxPublicKeysPerDid": "u32",
            "DidPublicKeyMap": "BoundedBTreeMap<KeyIdOf, DidPublicKeyDetails, MaxPublicKeysPerDid>",
            "DidCreationDetails": {
              "did": "DidIdentifierOf",
              "submitter": "AccountId",
              "newKeyAgreementKey": "DidEncryptionKey",
              "newAssertionKey": "Option<DidVerificationKey>",
              "newDelegationKey": "Option<DidVerificationKey>"
            },
            "DidDetails": {
              "authenticationKey": "KeyIdOf",
              "keyAgreementKeys": "DidKeyAgreementKeys",
              "capabilityDelegationKey": "Option<KeyIdOf>",
              "assertionMethodKey": "Option<KeyIdOf>",
              "publicKeys": "DidPublicKeyMap",
              "lastTxCounter": "u64"
            },
            "DidDeletionOperation": {
              "did": "DidIdentifierOf",
              "txCounter": "u64"
            },
            "DidAuthorizedCallOperation": {
              "did": "DidIdentifierOf",
              "txCounter": "u64",
              "call": "DidCallableOf",
              "blockNumber": "BlockNumber",
              "submitter": "AccountId"
            }
          }
        },
        {
          "minmax": [
            8000,
            null
          ],
          "types": {
            "RawDidLinkedInfo": {
              "identifier": "AccountId32",
              "w3n": "Option<Text>",
              "serviceEndpoints": "Vec<PalletDidServiceEndpointsDidEndpoint>",
              "details": "PalletDidDidDetails"
            }
          }
        }
      ]
    }
  },
  "spec": {
    "cord-dev": {
      "Staging": {
        "runtime": {
          "Did": [
            {
              "methods": {
                "query": {
                  "description": "Return the information relative to the owner of the provided DID, if present.",
                  "params": [
                    {
                      "name": "did",
                      "type": "AccountId32"
                    }
                  ],
                  "type": "Option<RawDidLinkedInfo>"
                }
              },
              "version": 1
            }
          ]
        },
        "signedExtensions": {
          "CheckExtrinsicAuthor": {
            "extrinsic": {},
            "payload": {}
          },
          "PalletExtrinsicAuthorshipCheckExtrinsicAuthor": {
            "extrinsic": {},
            "payload": {}
          }
        },
        "types": [
          {
            "minmax": [
              0,
              7999
            ],
            "types": {
              "IdentifierOf": "Vec<u8>",
              "StreamIdOf": "IdentifierOf",
              "StreamDigestOf": "Hash",
              "SchemaIdOf": "IdentifierOf",
              "SchemaDigestOf": "Hash",
              "SwarmIdOf": "IdentifierOf",
              "CreatorOf": "AccountId",
              "StreamEntry": {
                "digest": "StreamDigestOf",
                "creator": "CreatorOf",
                "schema": "Option<SchemaIdOf>",
                "linked": "Option<StreamIdOf>",
                "swarm": "Option<SwarmIdOf>",
                "revoked": "bool",
                "counter": "u64"
              },
              "StreamCommitOf": {
                "_enum": [
                  "Genesis",
                  "Update",
                  "Status"
                ]
              },
              "StreamCommit": {
                "commit": "StreamCommitOf",
                "digest": "StreamDigestOf",
                "block": "BlockNumber"
              },
              "KeyIdOf": "Hash",
              "DidIdentifierOf": "AccountId",
              "AccountIdentifierOf": "AccountId",
              "DidCallableOf": "Call",
              "DidVerificationKey": {
                "_enum": {
                  "Ed25519": "[u8; 32]",
                  "Sr25519": "[u8; 32]"
                }
              },
              "DidEncryptionKey": {
                "_enum": {
                  "X25519": "[u8; 32]"
                }
              },
              "DidPublicKey": {
                "_enum": {
                  "PublicVerificationKey": "DidVerificationKey",
                  "PublicEncryptionKey": "DidEncryptionKey"
                }
              },
              "DidVerificationKeyRelationship": {
                "_enum": [
                  "Authentication",
                  "CapabilityDelegation",
                  "CapabilityInvocation",
                  "AssertionMethod"
                ]
              },
              "DidSignature": {
                "_enum": {
                  "Ed25519": "Ed25519Signature",
                  "Sr25519": "Sr25519Signature"
                }
              },
              "StorageError": {
                "_enum": {
                  "DidAlreadyPresent": "Null",
                  "DidNotPresent": "Null",
                  "DidKeyNotPresent": "DidVerificationKeyRelationship",
                  "KeyNotPresent": "Null",
                  "CurrentlyActiveKey": "Null",
                  "MaxPublicKeysPerDidExceeded": "Null",
                  "MaxTotalKeyAgreementKeysExceeded": "Null",
                  "DidAlreadyDeleted": "Null"
                }
              },
              "SignatureError": {
                "_enum": [
                  "InvalidSignatureFormat",
                  "InvalidSignature",
                  "InvalidNonce",
                  "TransactionExpired"
                ]
              },
              "KeyError": {
                "_enum": [
                  "InvalidVerificationKeyFormat",
                  "InvalidEncryptionKeyFormat"
                ]
              },
              "InputError": {
                "_enum": [
                  "MaxKeyAgreementKeysLimitExceeded",
                  "MaxVerificationKeysToRemoveLimitExceeded"
                ]
              },
              "DidPublicKeyDetails": {
                "key": "DidPublicKey",
                "blockNumber": "BlockNumber"
              },
              "DidNewKeyAgreementKeys": "BoundedBTreeSet<DidEncryptionKey, MaxNewKeyAgreementKeys>",
              "DidKeyAgreementKeys": "BoundedBTreeSet<KeyIdOf, MaxTotalKeyAgreementKeys>",
              "DidVerificationKeysToRevoke": "BoundedBTreeSet<KeyIdOf, MaxVerificationKeysToRevoke>",
              "MaxNewKeyAgreementKeys": "u32",
              "MaxTotalKeyAgreementKeys": "u32",
              "MaxVerificationKeysToRevoke": "u32",
              "MaxPublicKeysPerDid": "u32",
              "DidPublicKeyMap": "BoundedBTreeMap<KeyIdOf, DidPublicKeyDetails, MaxPublicKeysPerDid>",
              "DidCreationDetails": {
                "did": "DidIdentifierOf",
                "submitter": "AccountId",
                "newKeyAgreementKey": "DidEncryptionKey",
                "newAssertionKey": "Option<DidVerificationKey>",
                "newDelegationKey": "Option<DidVerificationKey>"
              },
              "DidDetails": {
                "authenticationKey": "KeyIdOf",
                "keyAgreementKeys": "DidKeyAgreementKeys",
                "capabilityDelegationKey": "Option<KeyIdOf>",
                "assertionMethodKey": "Option<KeyIdOf>",
                "publicKeys": "DidPublicKeyMap",
                "lastTxCounter": "u64"
              },
              "DidDeletionOperation": {
                "did": "DidIdentifierOf",
                "txCounter": "u64"
              },
              "DidAuthorizedCallOperation": {
                "did": "DidIdentifierOf",
                "txCounter": "u64",
                "call": "DidCallableOf",
                "blockNumber": "BlockNumber",
                "submitter": "AccountId"
              }
            }
          },
          {
            "minmax": [
              8000,
              null
            ],
            "types": {
              "RawDidLinkedInfo": {
                "identifier": "AccountId32",
                "w3n": "Option<Text>",
                "serviceEndpoints": "Vec<PalletDidServiceEndpointsDidEndpoint>",
                "details": "PalletDidDidDetails"
              }
            }
          }
        ]
      },
      "Development": {
        "runtime": {
          "Did": [
            {
              "methods": {
                "query": {
                  "description": "Return the information relative to the owner of the provided DID, if present.",
                  "params": [
                    {
                      "name": "did",
                      "type": "AccountId32"
                    }
                  ],
                  "type": "Option<RawDidLinkedInfo>"
                }
              },
              "version": 1
            }
          ]
        },
        "signedExtensions": {
          "CheckExtrinsicAuthor": {
            "extrinsic": {},
            "payload": {}
          },
          "PalletExtrinsicAuthorshipCheckExtrinsicAuthor": {
            "extrinsic": {},
            "payload": {}
          }
        },
        "types": [
          {
            "minmax": [
              0,
              7999
            ],
            "types": {
              "IdentifierOf": "Vec<u8>",
              "StreamIdOf": "IdentifierOf",
              "StreamDigestOf": "Hash",
              "SchemaIdOf": "IdentifierOf",
              "SchemaDigestOf": "Hash",
              "SwarmIdOf": "IdentifierOf",
              "CreatorOf": "AccountId",
              "StreamEntry": {
                "digest": "StreamDigestOf",
                "creator": "CreatorOf",
                "schema": "Option<SchemaIdOf>",
                "linked": "Option<StreamIdOf>",
                "swarm": "Option<SwarmIdOf>",
                "revoked": "bool",
                "counter": "u64"
              },
              "StreamCommitOf": {
                "_enum": [
                  "Genesis",
                  "Update",
                  "Status"
                ]
              },
              "StreamCommit": {
                "commit": "StreamCommitOf",
                "digest": "StreamDigestOf",
                "block": "BlockNumber"
              },
              "KeyIdOf": "Hash",
              "DidIdentifierOf": "AccountId",
              "AccountIdentifierOf": "AccountId",
              "DidCallableOf": "Call",
              "DidVerificationKey": {
                "_enum": {
                  "Ed25519": "[u8; 32]",
                  "Sr25519": "[u8; 32]"
                }
              },
              "DidEncryptionKey": {
                "_enum": {
                  "X25519": "[u8; 32]"
                }
              },
              "DidPublicKey": {
                "_enum": {
                  "PublicVerificationKey": "DidVerificationKey",
                  "PublicEncryptionKey": "DidEncryptionKey"
                }
              },
              "DidVerificationKeyRelationship": {
                "_enum": [
                  "Authentication",
                  "CapabilityDelegation",
                  "CapabilityInvocation",
                  "AssertionMethod"
                ]
              },
              "DidSignature": {
                "_enum": {
                  "Ed25519": "Ed25519Signature",
                  "Sr25519": "Sr25519Signature"
                }
              },
              "StorageError": {
                "_enum": {
                  "DidAlreadyPresent": "Null",
                  "DidNotPresent": "Null",
                  "DidKeyNotPresent": "DidVerificationKeyRelationship",
                  "KeyNotPresent": "Null",
                  "CurrentlyActiveKey": "Null",
                  "MaxPublicKeysPerDidExceeded": "Null",
                  "MaxTotalKeyAgreementKeysExceeded": "Null",
                  "DidAlreadyDeleted": "Null"
                }
              },
              "SignatureError": {
                "_enum": [
                  "InvalidSignatureFormat",
                  "InvalidSignature",
                  "InvalidNonce",
                  "TransactionExpired"
                ]
              },
              "KeyError": {
                "_enum": [
                  "InvalidVerificationKeyFormat",
                  "InvalidEncryptionKeyFormat"
                ]
              },
              "InputError": {
                "_enum": [
                  "MaxKeyAgreementKeysLimitExceeded",
                  "MaxVerificationKeysToRemoveLimitExceeded"
                ]
              },
              "DidPublicKeyDetails": {
                "key": "DidPublicKey",
                "blockNumber": "BlockNumber"
              },
              "DidNewKeyAgreementKeys": "BoundedBTreeSet<DidEncryptionKey, MaxNewKeyAgreementKeys>",
              "DidKeyAgreementKeys": "BoundedBTreeSet<KeyIdOf, MaxTotalKeyAgreementKeys>",
              "DidVerificationKeysToRevoke": "BoundedBTreeSet<KeyIdOf, MaxVerificationKeysToRevoke>",
              "MaxNewKeyAgreementKeys": "u32",
              "MaxTotalKeyAgreementKeys": "u32",
              "MaxVerificationKeysToRevoke": "u32",
              "MaxPublicKeysPerDid": "u32",
              "DidPublicKeyMap": "BoundedBTreeMap<KeyIdOf, DidPublicKeyDetails, MaxPublicKeysPerDid>",
              "DidCreationDetails": {
                "did": "DidIdentifierOf",
                "submitter": "AccountId",
                "newKeyAgreementKey": "DidEncryptionKey",
                "newAssertionKey": "Option<DidVerificationKey>",
                "newDelegationKey": "Option<DidVerificationKey>"
              },
              "DidDetails": {
                "authenticationKey": "KeyIdOf",
                "keyAgreementKeys": "DidKeyAgreementKeys",
                "capabilityDelegationKey": "Option<KeyIdOf>",
                "assertionMethodKey": "Option<KeyIdOf>",
                "publicKeys": "DidPublicKeyMap",
                "lastTxCounter": "u64"
              },
              "DidDeletionOperation": {
                "did": "DidIdentifierOf",
                "txCounter": "u64"
              },
              "DidAuthorizedCallOperation": {
                "did": "DidIdentifierOf",
                "txCounter": "u64",
                "call": "DidCallableOf",
                "blockNumber": "BlockNumber",
                "submitter": "AccountId"
              }
            }
          },
          {
            "minmax": [
              8000,
              null
            ],
            "types": {
              "RawDidLinkedInfo": {
                "identifier": "AccountId32",
                "w3n": "Option<Text>",
                "serviceEndpoints": "Vec<PalletDidServiceEndpointsDidEndpoint>",
                "details": "PalletDidDidDetails"
              }
            }
          }
        ]
      }
    },
    "cord-local": {
      "Staging": {
        "runtime": {
          "Did": [
            {
              "methods": {
                "query": {
                  "description": "Return the information relative to the owner of the provided DID, if present.",
                  "params": [
                    {
                      "name": "did",
                      "type": "AccountId32"
                    }
                  ],
                  "type": "Option<RawDidLinkedInfo>"
                }
              },
              "version": 1
            }
          ]
        },
        "signedExtensions": {
          "CheckExtrinsicAuthor": {
            "extrinsic": {},
            "payload": {}
          },
          "PalletExtrinsicAuthorshipCheckExtrinsicAuthor": {
            "extrinsic": {},
            "payload": {}
          }
        },
        "types": [
          {
            "minmax": [
              0,
              7999
            ],
            "types": {
              "IdentifierOf": "Vec<u8>",
              "StreamIdOf": "IdentifierOf",
              "StreamDigestOf": "Hash",
              "SchemaIdOf": "IdentifierOf",
              "SchemaDigestOf": "Hash",
              "SwarmIdOf": "IdentifierOf",
              "CreatorOf": "AccountId",
              "StreamEntry": {
                "digest": "StreamDigestOf",
                "creator": "CreatorOf",
                "schema": "Option<SchemaIdOf>",
                "linked": "Option<StreamIdOf>",
                "swarm": "Option<SwarmIdOf>",
                "revoked": "bool",
                "counter": "u64"
              },
              "StreamCommitOf": {
                "_enum": [
                  "Genesis",
                  "Update",
                  "Status"
                ]
              },
              "StreamCommit": {
                "commit": "StreamCommitOf",
                "digest": "StreamDigestOf",
                "block": "BlockNumber"
              },
              "KeyIdOf": "Hash",
              "DidIdentifierOf": "AccountId",
              "AccountIdentifierOf": "AccountId",
              "DidCallableOf": "Call",
              "DidVerificationKey": {
                "_enum": {
                  "Ed25519": "[u8; 32]",
                  "Sr25519": "[u8; 32]"
                }
              },
              "DidEncryptionKey": {
                "_enum": {
                  "X25519": "[u8; 32]"
                }
              },
              "DidPublicKey": {
                "_enum": {
                  "PublicVerificationKey": "DidVerificationKey",
                  "PublicEncryptionKey": "DidEncryptionKey"
                }
              },
              "DidVerificationKeyRelationship": {
                "_enum": [
                  "Authentication",
                  "CapabilityDelegation",
                  "CapabilityInvocation",
                  "AssertionMethod"
                ]
              },
              "DidSignature": {
                "_enum": {
                  "Ed25519": "Ed25519Signature",
                  "Sr25519": "Sr25519Signature"
                }
              },
              "StorageError": {
                "_enum": {
                  "DidAlreadyPresent": "Null",
                  "DidNotPresent": "Null",
                  "DidKeyNotPresent": "DidVerificationKeyRelationship",
                  "KeyNotPresent": "Null",
                  "CurrentlyActiveKey": "Null",
                  "MaxPublicKeysPerDidExceeded": "Null",
                  "MaxTotalKeyAgreementKeysExceeded": "Null",
                  "DidAlreadyDeleted": "Null"
                }
              },
              "SignatureError": {
                "_enum": [
                  "InvalidSignatureFormat",
                  "InvalidSignature",
                  "InvalidNonce",
                  "TransactionExpired"
                ]
              },
              "KeyError": {
                "_enum": [
                  "InvalidVerificationKeyFormat",
                  "InvalidEncryptionKeyFormat"
                ]
              },
              "InputError": {
                "_enum": [
                  "MaxKeyAgreementKeysLimitExceeded",
                  "MaxVerificationKeysToRemoveLimitExceeded"
                ]
              },
              "DidPublicKeyDetails": {
                "key": "DidPublicKey",
                "blockNumber": "BlockNumber"
              },
              "DidNewKeyAgreementKeys": "BoundedBTreeSet<DidEncryptionKey, MaxNewKeyAgreementKeys>",
              "DidKeyAgreementKeys": "BoundedBTreeSet<KeyIdOf, MaxTotalKeyAgreementKeys>",
              "DidVerificationKeysToRevoke": "BoundedBTreeSet<KeyIdOf, MaxVerificationKeysToRevoke>",
              "MaxNewKeyAgreementKeys": "u32",
              "MaxTotalKeyAgreementKeys": "u32",
              "MaxVerificationKeysToRevoke": "u32",
              "MaxPublicKeysPerDid": "u32",
              "DidPublicKeyMap": "BoundedBTreeMap<KeyIdOf, DidPublicKeyDetails, MaxPublicKeysPerDid>",
              "DidCreationDetails": {
                "did": "DidIdentifierOf",
                "submitter": "AccountId",
                "newKeyAgreementKey": "DidEncryptionKey",
                "newAssertionKey": "Option<DidVerificationKey>",
                "newDelegationKey": "Option<DidVerificationKey>"
              },
              "DidDetails": {
                "authenticationKey": "KeyIdOf",
                "keyAgreementKeys": "DidKeyAgreementKeys",
                "capabilityDelegationKey": "Option<KeyIdOf>",
                "assertionMethodKey": "Option<KeyIdOf>",
                "publicKeys": "DidPublicKeyMap",
                "lastTxCounter": "u64"
              },
              "DidDeletionOperation": {
                "did": "DidIdentifierOf",
                "txCounter": "u64"
              },
              "DidAuthorizedCallOperation": {
                "did": "DidIdentifierOf",
                "txCounter": "u64",
                "call": "DidCallableOf",
                "blockNumber": "BlockNumber",
                "submitter": "AccountId"
              }
            }
          },
          {
            "minmax": [
              8000,
              null
            ],
            "types": {
              "RawDidLinkedInfo": {
                "identifier": "AccountId32",
                "w3n": "Option<Text>",
                "serviceEndpoints": "Vec<PalletDidServiceEndpointsDidEndpoint>",
                "details": "PalletDidDidDetails"
              }
            }
          }
        ]
      },
      "Development": {
        "runtime": {
          "Did": [
            {
              "methods": {
                "query": {
                  "description": "Return the information relative to the owner of the provided DID, if present.",
                  "params": [
                    {
                      "name": "did",
                      "type": "AccountId32"
                    }
                  ],
                  "type": "Option<RawDidLinkedInfo>"
                }
              },
              "version": 1
            }
          ]
        },
        "signedExtensions": {
          "CheckExtrinsicAuthor": {
            "extrinsic": {},
            "payload": {}
          },
          "PalletExtrinsicAuthorshipCheckExtrinsicAuthor": {
            "extrinsic": {},
            "payload": {}
          }
        },
        "types": [
          {
            "minmax": [
              0,
              7999
            ],
            "types": {
              "IdentifierOf": "Vec<u8>",
              "StreamIdOf": "IdentifierOf",
              "StreamDigestOf": "Hash",
              "SchemaIdOf": "IdentifierOf",
              "SchemaDigestOf": "Hash",
              "SwarmIdOf": "IdentifierOf",
              "CreatorOf": "AccountId",
              "StreamEntry": {
                "digest": "StreamDigestOf",
                "creator": "CreatorOf",
                "schema": "Option<SchemaIdOf>",
                "linked": "Option<StreamIdOf>",
                "swarm": "Option<SwarmIdOf>",
                "revoked": "bool",
                "counter": "u64"
              },
              "StreamCommitOf": {
                "_enum": [
                  "Genesis",
                  "Update",
                  "Status"
                ]
              },
              "StreamCommit": {
                "commit": "StreamCommitOf",
                "digest": "StreamDigestOf",
                "block": "BlockNumber"
              },
              "KeyIdOf": "Hash",
              "DidIdentifierOf": "AccountId",
              "AccountIdentifierOf": "AccountId",
              "DidCallableOf": "Call",
              "DidVerificationKey": {
                "_enum": {
                  "Ed25519": "[u8; 32]",
                  "Sr25519": "[u8; 32]"
                }
              },
              "DidEncryptionKey": {
                "_enum": {
                  "X25519": "[u8; 32]"
                }
              },
              "DidPublicKey": {
                "_enum": {
                  "PublicVerificationKey": "DidVerificationKey",
                  "PublicEncryptionKey": "DidEncryptionKey"
                }
              },
              "DidVerificationKeyRelationship": {
                "_enum": [
                  "Authentication",
                  "CapabilityDelegation",
                  "CapabilityInvocation",
                  "AssertionMethod"
                ]
              },
              "DidSignature": {
                "_enum": {
                  "Ed25519": "Ed25519Signature",
                  "Sr25519": "Sr25519Signature"
                }
              },
              "StorageError": {
                "_enum": {
                  "DidAlreadyPresent": "Null",
                  "DidNotPresent": "Null",
                  "DidKeyNotPresent": "DidVerificationKeyRelationship",
                  "KeyNotPresent": "Null",
                  "CurrentlyActiveKey": "Null",
                  "MaxPublicKeysPerDidExceeded": "Null",
                  "MaxTotalKeyAgreementKeysExceeded": "Null",
                  "DidAlreadyDeleted": "Null"
                }
              },
              "SignatureError": {
                "_enum": [
                  "InvalidSignatureFormat",
                  "InvalidSignature",
                  "InvalidNonce",
                  "TransactionExpired"
                ]
              },
              "KeyError": {
                "_enum": [
                  "InvalidVerificationKeyFormat",
                  "InvalidEncryptionKeyFormat"
                ]
              },
              "InputError": {
                "_enum": [
                  "MaxKeyAgreementKeysLimitExceeded",
                  "MaxVerificationKeysToRemoveLimitExceeded"
                ]
              },
              "DidPublicKeyDetails": {
                "key": "DidPublicKey",
                "blockNumber": "BlockNumber"
              },
              "DidNewKeyAgreementKeys": "BoundedBTreeSet<DidEncryptionKey, MaxNewKeyAgreementKeys>",
              "DidKeyAgreementKeys": "BoundedBTreeSet<KeyIdOf, MaxTotalKeyAgreementKeys>",
              "DidVerificationKeysToRevoke": "BoundedBTreeSet<KeyIdOf, MaxVerificationKeysToRevoke>",
              "MaxNewKeyAgreementKeys": "u32",
              "MaxTotalKeyAgreementKeys": "u32",
              "MaxVerificationKeysToRevoke": "u32",
              "MaxPublicKeysPerDid": "u32",
              "DidPublicKeyMap": "BoundedBTreeMap<KeyIdOf, DidPublicKeyDetails, MaxPublicKeysPerDid>",
              "DidCreationDetails": {
                "did": "DidIdentifierOf",
                "submitter": "AccountId",
                "newKeyAgreementKey": "DidEncryptionKey",
                "newAssertionKey": "Option<DidVerificationKey>",
                "newDelegationKey": "Option<DidVerificationKey>"
              },
              "DidDetails": {
                "authenticationKey": "KeyIdOf",
                "keyAgreementKeys": "DidKeyAgreementKeys",
                "capabilityDelegationKey": "Option<KeyIdOf>",
                "assertionMethodKey": "Option<KeyIdOf>",
                "publicKeys": "DidPublicKeyMap",
                "lastTxCounter": "u64"
              },
              "DidDeletionOperation": {
                "did": "DidIdentifierOf",
                "txCounter": "u64"
              },
              "DidAuthorizedCallOperation": {
                "did": "DidIdentifierOf",
                "txCounter": "u64",
                "call": "DidCallableOf",
                "blockNumber": "BlockNumber",
                "submitter": "AccountId"
              }
            }
          },
          {
            "minmax": [
              8000,
              null
            ],
            "types": {
              "RawDidLinkedInfo": {
                "identifier": "AccountId32",
                "w3n": "Option<Text>",
                "serviceEndpoints": "Vec<PalletDidServiceEndpointsDidEndpoint>",
                "details": "PalletDidDidDetails"
              }
            }
          }
        ]
      }
    },
    "cord-staging": {
      "Staging": {
        "runtime": {
          "Did": [
            {
              "methods": {
                "query": {
                  "description": "Return the information relative to the owner of the provided DID, if present.",
                  "params": [
                    {
                      "name": "did",
                      "type": "AccountId32"
                    }
                  ],
                  "type": "Option<RawDidLinkedInfo>"
                }
              },
              "version": 1
            }
          ]
        },
        "signedExtensions": {
          "CheckExtrinsicAuthor": {
            "extrinsic": {},
            "payload": {}
          },
          "PalletExtrinsicAuthorshipCheckExtrinsicAuthor": {
            "extrinsic": {},
            "payload": {}
          }
        },
        "types": [
          {
            "minmax": [
              0,
              7999
            ],
            "types": {
              "IdentifierOf": "Vec<u8>",
              "StreamIdOf": "IdentifierOf",
              "StreamDigestOf": "Hash",
              "SchemaIdOf": "IdentifierOf",
              "SchemaDigestOf": "Hash",
              "SwarmIdOf": "IdentifierOf",
              "CreatorOf": "AccountId",
              "StreamEntry": {
                "digest": "StreamDigestOf",
                "creator": "CreatorOf",
                "schema": "Option<SchemaIdOf>",
                "linked": "Option<StreamIdOf>",
                "swarm": "Option<SwarmIdOf>",
                "revoked": "bool",
                "counter": "u64"
              },
              "StreamCommitOf": {
                "_enum": [
                  "Genesis",
                  "Update",
                  "Status"
                ]
              },
              "StreamCommit": {
                "commit": "StreamCommitOf",
                "digest": "StreamDigestOf",
                "block": "BlockNumber"
              },
              "KeyIdOf": "Hash",
              "DidIdentifierOf": "AccountId",
              "AccountIdentifierOf": "AccountId",
              "DidCallableOf": "Call",
              "DidVerificationKey": {
                "_enum": {
                  "Ed25519": "[u8; 32]",
                  "Sr25519": "[u8; 32]"
                }
              },
              "DidEncryptionKey": {
                "_enum": {
                  "X25519": "[u8; 32]"
                }
              },
              "DidPublicKey": {
                "_enum": {
                  "PublicVerificationKey": "DidVerificationKey",
                  "PublicEncryptionKey": "DidEncryptionKey"
                }
              },
              "DidVerificationKeyRelationship": {
                "_enum": [
                  "Authentication",
                  "CapabilityDelegation",
                  "CapabilityInvocation",
                  "AssertionMethod"
                ]
              },
              "DidSignature": {
                "_enum": {
                  "Ed25519": "Ed25519Signature",
                  "Sr25519": "Sr25519Signature"
                }
              },
              "StorageError": {
                "_enum": {
                  "DidAlreadyPresent": "Null",
                  "DidNotPresent": "Null",
                  "DidKeyNotPresent": "DidVerificationKeyRelationship",
                  "KeyNotPresent": "Null",
                  "CurrentlyActiveKey": "Null",
                  "MaxPublicKeysPerDidExceeded": "Null",
                  "MaxTotalKeyAgreementKeysExceeded": "Null",
                  "DidAlreadyDeleted": "Null"
                }
              },
              "SignatureError": {
                "_enum": [
                  "InvalidSignatureFormat",
                  "InvalidSignature",
                  "InvalidNonce",
                  "TransactionExpired"
                ]
              },
              "KeyError": {
                "_enum": [
                  "InvalidVerificationKeyFormat",
                  "InvalidEncryptionKeyFormat"
                ]
              },
              "InputError": {
                "_enum": [
                  "MaxKeyAgreementKeysLimitExceeded",
                  "MaxVerificationKeysToRemoveLimitExceeded"
                ]
              },
              "DidPublicKeyDetails": {
                "key": "DidPublicKey",
                "blockNumber": "BlockNumber"
              },
              "DidNewKeyAgreementKeys": "BoundedBTreeSet<DidEncryptionKey, MaxNewKeyAgreementKeys>",
              "DidKeyAgreementKeys": "BoundedBTreeSet<KeyIdOf, MaxTotalKeyAgreementKeys>",
              "DidVerificationKeysToRevoke": "BoundedBTreeSet<KeyIdOf, MaxVerificationKeysToRevoke>",
              "MaxNewKeyAgreementKeys": "u32",
              "MaxTotalKeyAgreementKeys": "u32",
              "MaxVerificationKeysToRevoke": "u32",
              "MaxPublicKeysPerDid": "u32",
              "DidPublicKeyMap": "BoundedBTreeMap<KeyIdOf, DidPublicKeyDetails, MaxPublicKeysPerDid>",
              "DidCreationDetails": {
                "did": "DidIdentifierOf",
                "submitter": "AccountId",
                "newKeyAgreementKey": "DidEncryptionKey",
                "newAssertionKey": "Option<DidVerificationKey>",
                "newDelegationKey": "Option<DidVerificationKey>"
              },
              "DidDetails": {
                "authenticationKey": "KeyIdOf",
                "keyAgreementKeys": "DidKeyAgreementKeys",
                "capabilityDelegationKey": "Option<KeyIdOf>",
                "assertionMethodKey": "Option<KeyIdOf>",
                "publicKeys": "DidPublicKeyMap",
                "lastTxCounter": "u64"
              },
              "DidDeletionOperation": {
                "did": "DidIdentifierOf",
                "txCounter": "u64"
              },
              "DidAuthorizedCallOperation": {
                "did": "DidIdentifierOf",
                "txCounter": "u64",
                "call": "DidCallableOf",
                "blockNumber": "BlockNumber",
                "submitter": "AccountId"
              }
            }
          },
          {
            "minmax": [
              8000,
              null
            ],
            "types": {
              "RawDidLinkedInfo": {
                "identifier": "AccountId32",
                "w3n": "Option<Text>",
                "serviceEndpoints": "Vec<PalletDidServiceEndpointsDidEndpoint>",
                "details": "PalletDidDidDetails"
              }
            }
          }
        ]
      },
      "Development": {
        "runtime": {
          "Did": [
            {
              "methods": {
                "query": {
                  "description": "Return the information relative to the owner of the provided DID, if present.",
                  "params": [
                    {
                      "name": "did",
                      "type": "AccountId32"
                    }
                  ],
                  "type": "Option<RawDidLinkedInfo>"
                }
              },
              "version": 1
            }
          ]
        },
        "signedExtensions": {
          "CheckExtrinsicAuthor": {
            "extrinsic": {},
            "payload": {}
          },
          "PalletExtrinsicAuthorshipCheckExtrinsicAuthor": {
            "extrinsic": {},
            "payload": {}
          }
        },
        "types": [
          {
            "minmax": [
              0,
              7999
            ],
            "types": {
              "IdentifierOf": "Vec<u8>",
              "StreamIdOf": "IdentifierOf",
              "StreamDigestOf": "Hash",
              "SchemaIdOf": "IdentifierOf",
              "SchemaDigestOf": "Hash",
              "SwarmIdOf": "IdentifierOf",
              "CreatorOf": "AccountId",
              "StreamEntry": {
                "digest": "StreamDigestOf",
                "creator": "CreatorOf",
                "schema": "Option<SchemaIdOf>",
                "linked": "Option<StreamIdOf>",
                "swarm": "Option<SwarmIdOf>",
                "revoked": "bool",
                "counter": "u64"
              },
              "StreamCommitOf": {
                "_enum": [
                  "Genesis",
                  "Update",
                  "Status"
                ]
              },
              "StreamCommit": {
                "commit": "StreamCommitOf",
                "digest": "StreamDigestOf",
                "block": "BlockNumber"
              },
              "KeyIdOf": "Hash",
              "DidIdentifierOf": "AccountId",
              "AccountIdentifierOf": "AccountId",
              "DidCallableOf": "Call",
              "DidVerificationKey": {
                "_enum": {
                  "Ed25519": "[u8; 32]",
                  "Sr25519": "[u8; 32]"
                }
              },
              "DidEncryptionKey": {
                "_enum": {
                  "X25519": "[u8; 32]"
                }
              },
              "DidPublicKey": {
                "_enum": {
                  "PublicVerificationKey": "DidVerificationKey",
                  "PublicEncryptionKey": "DidEncryptionKey"
                }
              },
              "DidVerificationKeyRelationship": {
                "_enum": [
                  "Authentication",
                  "CapabilityDelegation",
                  "CapabilityInvocation",
                  "AssertionMethod"
                ]
              },
              "DidSignature": {
                "_enum": {
                  "Ed25519": "Ed25519Signature",
                  "Sr25519": "Sr25519Signature"
                }
              },
              "StorageError": {
                "_enum": {
                  "DidAlreadyPresent": "Null",
                  "DidNotPresent": "Null",
                  "DidKeyNotPresent": "DidVerificationKeyRelationship",
                  "KeyNotPresent": "Null",
                  "CurrentlyActiveKey": "Null",
                  "MaxPublicKeysPerDidExceeded": "Null",
                  "MaxTotalKeyAgreementKeysExceeded": "Null",
                  "DidAlreadyDeleted": "Null"
                }
              },
              "SignatureError": {
                "_enum": [
                  "InvalidSignatureFormat",
                  "InvalidSignature",
                  "InvalidNonce",
                  "TransactionExpired"
                ]
              },
              "KeyError": {
                "_enum": [
                  "InvalidVerificationKeyFormat",
                  "InvalidEncryptionKeyFormat"
                ]
              },
              "InputError": {
                "_enum": [
                  "MaxKeyAgreementKeysLimitExceeded",
                  "MaxVerificationKeysToRemoveLimitExceeded"
                ]
              },
              "DidPublicKeyDetails": {
                "key": "DidPublicKey",
                "blockNumber": "BlockNumber"
              },
              "DidNewKeyAgreementKeys": "BoundedBTreeSet<DidEncryptionKey, MaxNewKeyAgreementKeys>",
              "DidKeyAgreementKeys": "BoundedBTreeSet<KeyIdOf, MaxTotalKeyAgreementKeys>",
              "DidVerificationKeysToRevoke": "BoundedBTreeSet<KeyIdOf, MaxVerificationKeysToRevoke>",
              "MaxNewKeyAgreementKeys": "u32",
              "MaxTotalKeyAgreementKeys": "u32",
              "MaxVerificationKeysToRevoke": "u32",
              "MaxPublicKeysPerDid": "u32",
              "DidPublicKeyMap": "BoundedBTreeMap<KeyIdOf, DidPublicKeyDetails, MaxPublicKeysPerDid>",
              "DidCreationDetails": {
                "did": "DidIdentifierOf",
                "submitter": "AccountId",
                "newKeyAgreementKey": "DidEncryptionKey",
                "newAssertionKey": "Option<DidVerificationKey>",
                "newDelegationKey": "Option<DidVerificationKey>"
              },
              "DidDetails": {
                "authenticationKey": "KeyIdOf",
                "keyAgreementKeys": "DidKeyAgreementKeys",
                "capabilityDelegationKey": "Option<KeyIdOf>",
                "assertionMethodKey": "Option<KeyIdOf>",
                "publicKeys": "DidPublicKeyMap",
                "lastTxCounter": "u64"
              },
              "DidDeletionOperation": {
                "did": "DidIdentifierOf",
                "txCounter": "u64"
              },
              "DidAuthorizedCallOperation": {
                "did": "DidIdentifierOf",
                "txCounter": "u64",
                "call": "DidCallableOf",
                "blockNumber": "BlockNumber",
                "submitter": "AccountId"
              }
            }
          },
          {
            "minmax": [
              8000,
              null
            ],
            "types": {
              "RawDidLinkedInfo": {
                "identifier": "AccountId32",
                "w3n": "Option<Text>",
                "serviceEndpoints": "Vec<PalletDidServiceEndpointsDidEndpoint>",
                "details": "PalletDidDidDetails"
              }
            }
          }
        ]
      }
    },
    "cord": {
      "Staging": {
        "runtime": {
          "Did": [
            {
              "methods": {
                "query": {
                  "description": "Return the information relative to the owner of the provided DID, if present.",
                  "params": [
                    {
                      "name": "did",
                      "type": "AccountId32"
                    }
                  ],
                  "type": "Option<RawDidLinkedInfo>"
                }
              },
              "version": 1
            }
          ]
        },
        "signedExtensions": {
          "CheckExtrinsicAuthor": {
            "extrinsic": {},
            "payload": {}
          },
          "PalletExtrinsicAuthorshipCheckExtrinsicAuthor": {
            "extrinsic": {},
            "payload": {}
          }
        },
        "types": [
          {
            "minmax": [
              0,
              7999
            ],
            "types": {
              "IdentifierOf": "Vec<u8>",
              "StreamIdOf": "IdentifierOf",
              "StreamDigestOf": "Hash",
              "SchemaIdOf": "IdentifierOf",
              "SchemaDigestOf": "Hash",
              "SwarmIdOf": "IdentifierOf",
              "CreatorOf": "AccountId",
              "StreamEntry": {
                "digest": "StreamDigestOf",
                "creator": "CreatorOf",
                "schema": "Option<SchemaIdOf>",
                "linked": "Option<StreamIdOf>",
                "swarm": "Option<SwarmIdOf>",
                "revoked": "bool",
                "counter": "u64"
              },
              "StreamCommitOf": {
                "_enum": [
                  "Genesis",
                  "Update",
                  "Status"
                ]
              },
              "StreamCommit": {
                "commit": "StreamCommitOf",
                "digest": "StreamDigestOf",
                "block": "BlockNumber"
              },
              "KeyIdOf": "Hash",
              "DidIdentifierOf": "AccountId",
              "AccountIdentifierOf": "AccountId",
              "DidCallableOf": "Call",
              "DidVerificationKey": {
                "_enum": {
                  "Ed25519": "[u8; 32]",
                  "Sr25519": "[u8; 32]"
                }
              },
              "DidEncryptionKey": {
                "_enum": {
                  "X25519": "[u8; 32]"
                }
              },
              "DidPublicKey": {
                "_enum": {
                  "PublicVerificationKey": "DidVerificationKey",
                  "PublicEncryptionKey": "DidEncryptionKey"
                }
              },
              "DidVerificationKeyRelationship": {
                "_enum": [
                  "Authentication",
                  "CapabilityDelegation",
                  "CapabilityInvocation",
                  "AssertionMethod"
                ]
              },
              "DidSignature": {
                "_enum": {
                  "Ed25519": "Ed25519Signature",
                  "Sr25519": "Sr25519Signature"
                }
              },
              "StorageError": {
                "_enum": {
                  "DidAlreadyPresent": "Null",
                  "DidNotPresent": "Null",
                  "DidKeyNotPresent": "DidVerificationKeyRelationship",
                  "KeyNotPresent": "Null",
                  "CurrentlyActiveKey": "Null",
                  "MaxPublicKeysPerDidExceeded": "Null",
                  "MaxTotalKeyAgreementKeysExceeded": "Null",
                  "DidAlreadyDeleted": "Null"
                }
              },
              "SignatureError": {
                "_enum": [
                  "InvalidSignatureFormat",
                  "InvalidSignature",
                  "InvalidNonce",
                  "TransactionExpired"
                ]
              },
              "KeyError": {
                "_enum": [
                  "InvalidVerificationKeyFormat",
                  "InvalidEncryptionKeyFormat"
                ]
              },
              "InputError": {
                "_enum": [
                  "MaxKeyAgreementKeysLimitExceeded",
                  "MaxVerificationKeysToRemoveLimitExceeded"
                ]
              },
              "DidPublicKeyDetails": {
                "key": "DidPublicKey",
                "blockNumber": "BlockNumber"
              },
              "DidNewKeyAgreementKeys": "BoundedBTreeSet<DidEncryptionKey, MaxNewKeyAgreementKeys>",
              "DidKeyAgreementKeys": "BoundedBTreeSet<KeyIdOf, MaxTotalKeyAgreementKeys>",
              "DidVerificationKeysToRevoke": "BoundedBTreeSet<KeyIdOf, MaxVerificationKeysToRevoke>",
              "MaxNewKeyAgreementKeys": "u32",
              "MaxTotalKeyAgreementKeys": "u32",
              "MaxVerificationKeysToRevoke": "u32",
              "MaxPublicKeysPerDid": "u32",
              "DidPublicKeyMap": "BoundedBTreeMap<KeyIdOf, DidPublicKeyDetails, MaxPublicKeysPerDid>",
              "DidCreationDetails": {
                "did": "DidIdentifierOf",
                "submitter": "AccountId",
                "newKeyAgreementKey": "DidEncryptionKey",
                "newAssertionKey": "Option<DidVerificationKey>",
                "newDelegationKey": "Option<DidVerificationKey>"
              },
              "DidDetails": {
                "authenticationKey": "KeyIdOf",
                "keyAgreementKeys": "DidKeyAgreementKeys",
                "capabilityDelegationKey": "Option<KeyIdOf>",
                "assertionMethodKey": "Option<KeyIdOf>",
                "publicKeys": "DidPublicKeyMap",
                "lastTxCounter": "u64"
              },
              "DidDeletionOperation": {
                "did": "DidIdentifierOf",
                "txCounter": "u64"
              },
              "DidAuthorizedCallOperation": {
                "did": "DidIdentifierOf",
                "txCounter": "u64",
                "call": "DidCallableOf",
                "blockNumber": "BlockNumber",
                "submitter": "AccountId"
              }
            }
          },
          {
            "minmax": [
              8000,
              null
            ],
            "types": {
              "RawDidLinkedInfo": {
                "identifier": "AccountId32",
                "w3n": "Option<Text>",
                "serviceEndpoints": "Vec<PalletDidServiceEndpointsDidEndpoint>",
                "details": "PalletDidDidDetails"
              }
            }
          }
        ]
      },
      "Development": {
        "runtime": {
          "Did": [
            {
              "methods": {
                "query": {
                  "description": "Return the information relative to the owner of the provided DID, if present.",
                  "params": [
                    {
                      "name": "did",
                      "type": "AccountId32"
                    }
                  ],
                  "type": "Option<RawDidLinkedInfo>"
                }
              },
              "version": 1
            }
          ]
        },
        "signedExtensions": {
          "CheckExtrinsicAuthor": {
            "extrinsic": {},
            "payload": {}
          },
          "PalletExtrinsicAuthorshipCheckExtrinsicAuthor": {
            "extrinsic": {},
            "payload": {}
          }
        },
        "types": [
          {
            "minmax": [
              0,
              7999
            ],
            "types": {
              "IdentifierOf": "Vec<u8>",
              "StreamIdOf": "IdentifierOf",
              "StreamDigestOf": "Hash",
              "SchemaIdOf": "IdentifierOf",
              "SchemaDigestOf": "Hash",
              "SwarmIdOf": "IdentifierOf",
              "CreatorOf": "AccountId",
              "StreamEntry": {
                "digest": "StreamDigestOf",
                "creator": "CreatorOf",
                "schema": "Option<SchemaIdOf>",
                "linked": "Option<StreamIdOf>",
                "swarm": "Option<SwarmIdOf>",
                "revoked": "bool",
                "counter": "u64"
              },
              "StreamCommitOf": {
                "_enum": [
                  "Genesis",
                  "Update",
                  "Status"
                ]
              },
              "StreamCommit": {
                "commit": "StreamCommitOf",
                "digest": "StreamDigestOf",
                "block": "BlockNumber"
              },
              "KeyIdOf": "Hash",
              "DidIdentifierOf": "AccountId",
              "AccountIdentifierOf": "AccountId",
              "DidCallableOf": "Call",
              "DidVerificationKey": {
                "_enum": {
                  "Ed25519": "[u8; 32]",
                  "Sr25519": "[u8; 32]"
                }
              },
              "DidEncryptionKey": {
                "_enum": {
                  "X25519": "[u8; 32]"
                }
              },
              "DidPublicKey": {
                "_enum": {
                  "PublicVerificationKey": "DidVerificationKey",
                  "PublicEncryptionKey": "DidEncryptionKey"
                }
              },
              "DidVerificationKeyRelationship": {
                "_enum": [
                  "Authentication",
                  "CapabilityDelegation",
                  "CapabilityInvocation",
                  "AssertionMethod"
                ]
              },
              "DidSignature": {
                "_enum": {
                  "Ed25519": "Ed25519Signature",
                  "Sr25519": "Sr25519Signature"
                }
              },
              "StorageError": {
                "_enum": {
                  "DidAlreadyPresent": "Null",
                  "DidNotPresent": "Null",
                  "DidKeyNotPresent": "DidVerificationKeyRelationship",
                  "KeyNotPresent": "Null",
                  "CurrentlyActiveKey": "Null",
                  "MaxPublicKeysPerDidExceeded": "Null",
                  "MaxTotalKeyAgreementKeysExceeded": "Null",
                  "DidAlreadyDeleted": "Null"
                }
              },
              "SignatureError": {
                "_enum": [
                  "InvalidSignatureFormat",
                  "InvalidSignature",
                  "InvalidNonce",
                  "TransactionExpired"
                ]
              },
              "KeyError": {
                "_enum": [
                  "InvalidVerificationKeyFormat",
                  "InvalidEncryptionKeyFormat"
                ]
              },
              "InputError": {
                "_enum": [
                  "MaxKeyAgreementKeysLimitExceeded",
                  "MaxVerificationKeysToRemoveLimitExceeded"
                ]
              },
              "DidPublicKeyDetails": {
                "key": "DidPublicKey",
                "blockNumber": "BlockNumber"
              },
              "DidNewKeyAgreementKeys": "BoundedBTreeSet<DidEncryptionKey, MaxNewKeyAgreementKeys>",
              "DidKeyAgreementKeys": "BoundedBTreeSet<KeyIdOf, MaxTotalKeyAgreementKeys>",
              "DidVerificationKeysToRevoke": "BoundedBTreeSet<KeyIdOf, MaxVerificationKeysToRevoke>",
              "MaxNewKeyAgreementKeys": "u32",
              "MaxTotalKeyAgreementKeys": "u32",
              "MaxVerificationKeysToRevoke": "u32",
              "MaxPublicKeysPerDid": "u32",
              "DidPublicKeyMap": "BoundedBTreeMap<KeyIdOf, DidPublicKeyDetails, MaxPublicKeysPerDid>",
              "DidCreationDetails": {
                "did": "DidIdentifierOf",
                "submitter": "AccountId",
                "newKeyAgreementKey": "DidEncryptionKey",
                "newAssertionKey": "Option<DidVerificationKey>",
                "newDelegationKey": "Option<DidVerificationKey>"
              },
              "DidDetails": {
                "authenticationKey": "KeyIdOf",
                "keyAgreementKeys": "DidKeyAgreementKeys",
                "capabilityDelegationKey": "Option<KeyIdOf>",
                "assertionMethodKey": "Option<KeyIdOf>",
                "publicKeys": "DidPublicKeyMap",
                "lastTxCounter": "u64"
              },
              "DidDeletionOperation": {
                "did": "DidIdentifierOf",
                "txCounter": "u64"
              },
              "DidAuthorizedCallOperation": {
                "did": "DidIdentifierOf",
                "txCounter": "u64",
                "call": "DidCallableOf",
                "blockNumber": "BlockNumber",
                "submitter": "AccountId"
              }
            }
          },
          {
            "minmax": [
              8000,
              null
            ],
            "types": {
              "RawDidLinkedInfo": {
                "identifier": "AccountId32",
                "w3n": "Option<Text>",
                "serviceEndpoints": "Vec<PalletDidServiceEndpointsDidEndpoint>",
                "details": "PalletDidDidDetails"
              }
            }
          }
        ]
      }
    },
    "cord-node": {
      "Staging": {
        "runtime": {
          "Did": [
            {
              "methods": {
                "query": {
                  "description": "Return the information relative to the owner of the provided DID, if present.",
                  "params": [
                    {
                      "name": "did",
                      "type": "AccountId32"
                    }
                  ],
                  "type": "Option<RawDidLinkedInfo>"
                }
              },
              "version": 1
            }
          ]
        },
        "signedExtensions": {
          "CheckExtrinsicAuthor": {
            "extrinsic": {},
            "payload": {}
          },
          "PalletExtrinsicAuthorshipCheckExtrinsicAuthor": {
            "extrinsic": {},
            "payload": {}
          }
        },
        "types": [
          {
            "minmax": [
              0,
              7999
            ],
            "types": {
              "IdentifierOf": "Vec<u8>",
              "StreamIdOf": "IdentifierOf",
              "StreamDigestOf": "Hash",
              "SchemaIdOf": "IdentifierOf",
              "SchemaDigestOf": "Hash",
              "SwarmIdOf": "IdentifierOf",
              "CreatorOf": "AccountId",
              "StreamEntry": {
                "digest": "StreamDigestOf",
                "creator": "CreatorOf",
                "schema": "Option<SchemaIdOf>",
                "linked": "Option<StreamIdOf>",
                "swarm": "Option<SwarmIdOf>",
                "revoked": "bool",
                "counter": "u64"
              },
              "StreamCommitOf": {
                "_enum": [
                  "Genesis",
                  "Update",
                  "Status"
                ]
              },
              "StreamCommit": {
                "commit": "StreamCommitOf",
                "digest": "StreamDigestOf",
                "block": "BlockNumber"
              },
              "KeyIdOf": "Hash",
              "DidIdentifierOf": "AccountId",
              "AccountIdentifierOf": "AccountId",
              "DidCallableOf": "Call",
              "DidVerificationKey": {
                "_enum": {
                  "Ed25519": "[u8; 32]",
                  "Sr25519": "[u8; 32]"
                }
              },
              "DidEncryptionKey": {
                "_enum": {
                  "X25519": "[u8; 32]"
                }
              },
              "DidPublicKey": {
                "_enum": {
                  "PublicVerificationKey": "DidVerificationKey",
                  "PublicEncryptionKey": "DidEncryptionKey"
                }
              },
              "DidVerificationKeyRelationship": {
                "_enum": [
                  "Authentication",
                  "CapabilityDelegation",
                  "CapabilityInvocation",
                  "AssertionMethod"
                ]
              },
              "DidSignature": {
                "_enum": {
                  "Ed25519": "Ed25519Signature",
                  "Sr25519": "Sr25519Signature"
                }
              },
              "StorageError": {
                "_enum": {
                  "DidAlreadyPresent": "Null",
                  "DidNotPresent": "Null",
                  "DidKeyNotPresent": "DidVerificationKeyRelationship",
                  "KeyNotPresent": "Null",
                  "CurrentlyActiveKey": "Null",
                  "MaxPublicKeysPerDidExceeded": "Null",
                  "MaxTotalKeyAgreementKeysExceeded": "Null",
                  "DidAlreadyDeleted": "Null"
                }
              },
              "SignatureError": {
                "_enum": [
                  "InvalidSignatureFormat",
                  "InvalidSignature",
                  "InvalidNonce",
                  "TransactionExpired"
                ]
              },
              "KeyError": {
                "_enum": [
                  "InvalidVerificationKeyFormat",
                  "InvalidEncryptionKeyFormat"
                ]
              },
              "InputError": {
                "_enum": [
                  "MaxKeyAgreementKeysLimitExceeded",
                  "MaxVerificationKeysToRemoveLimitExceeded"
                ]
              },
              "DidPublicKeyDetails": {
                "key": "DidPublicKey",
                "blockNumber": "BlockNumber"
              },
              "DidNewKeyAgreementKeys": "BoundedBTreeSet<DidEncryptionKey, MaxNewKeyAgreementKeys>",
              "DidKeyAgreementKeys": "BoundedBTreeSet<KeyIdOf, MaxTotalKeyAgreementKeys>",
              "DidVerificationKeysToRevoke": "BoundedBTreeSet<KeyIdOf, MaxVerificationKeysToRevoke>",
              "MaxNewKeyAgreementKeys": "u32",
              "MaxTotalKeyAgreementKeys": "u32",
              "MaxVerificationKeysToRevoke": "u32",
              "MaxPublicKeysPerDid": "u32",
              "DidPublicKeyMap": "BoundedBTreeMap<KeyIdOf, DidPublicKeyDetails, MaxPublicKeysPerDid>",
              "DidCreationDetails": {
                "did": "DidIdentifierOf",
                "submitter": "AccountId",
                "newKeyAgreementKey": "DidEncryptionKey",
                "newAssertionKey": "Option<DidVerificationKey>",
                "newDelegationKey": "Option<DidVerificationKey>"
              },
              "DidDetails": {
                "authenticationKey": "KeyIdOf",
                "keyAgreementKeys": "DidKeyAgreementKeys",
                "capabilityDelegationKey": "Option<KeyIdOf>",
                "assertionMethodKey": "Option<KeyIdOf>",
                "publicKeys": "DidPublicKeyMap",
                "lastTxCounter": "u64"
              },
              "DidDeletionOperation": {
                "did": "DidIdentifierOf",
                "txCounter": "u64"
              },
              "DidAuthorizedCallOperation": {
                "did": "DidIdentifierOf",
                "txCounter": "u64",
                "call": "DidCallableOf",
                "blockNumber": "BlockNumber",
                "submitter": "AccountId"
              }
            }
          },
          {
            "minmax": [
              8000,
              null
            ],
            "types": {
              "RawDidLinkedInfo": {
                "identifier": "AccountId32",
                "w3n": "Option<Text>",
                "serviceEndpoints": "Vec<PalletDidServiceEndpointsDidEndpoint>",
                "details": "PalletDidDidDetails"
              }
            }
          }
        ]
      },
      "Development": {
        "runtime": {
          "Did": [
            {
              "methods": {
                "query": {
                  "description": "Return the information relative to the owner of the provided DID, if present.",
                  "params": [
                    {
                      "name": "did",
                      "type": "AccountId32"
                    }
                  ],
                  "type": "Option<RawDidLinkedInfo>"
                }
              },
              "version": 1
            }
          ]
        },
        "signedExtensions": {
          "CheckExtrinsicAuthor": {
            "extrinsic": {},
            "payload": {}
          },
          "PalletExtrinsicAuthorshipCheckExtrinsicAuthor": {
            "extrinsic": {},
            "payload": {}
          }
        },
        "types": [
          {
            "minmax": [
              0,
              7999
            ],
            "types": {
              "IdentifierOf": "Vec<u8>",
              "StreamIdOf": "IdentifierOf",
              "StreamDigestOf": "Hash",
              "SchemaIdOf": "IdentifierOf",
              "SchemaDigestOf": "Hash",
              "SwarmIdOf": "IdentifierOf",
              "CreatorOf": "AccountId",
              "StreamEntry": {
                "digest": "StreamDigestOf",
                "creator": "CreatorOf",
                "schema": "Option<SchemaIdOf>",
                "linked": "Option<StreamIdOf>",
                "swarm": "Option<SwarmIdOf>",
                "revoked": "bool",
                "counter": "u64"
              },
              "StreamCommitOf": {
                "_enum": [
                  "Genesis",
                  "Update",
                  "Status"
                ]
              },
              "StreamCommit": {
                "commit": "StreamCommitOf",
                "digest": "StreamDigestOf",
                "block": "BlockNumber"
              },
              "KeyIdOf": "Hash",
              "DidIdentifierOf": "AccountId",
              "AccountIdentifierOf": "AccountId",
              "DidCallableOf": "Call",
              "DidVerificationKey": {
                "_enum": {
                  "Ed25519": "[u8; 32]",
                  "Sr25519": "[u8; 32]"
                }
              },
              "DidEncryptionKey": {
                "_enum": {
                  "X25519": "[u8; 32]"
                }
              },
              "DidPublicKey": {
                "_enum": {
                  "PublicVerificationKey": "DidVerificationKey",
                  "PublicEncryptionKey": "DidEncryptionKey"
                }
              },
              "DidVerificationKeyRelationship": {
                "_enum": [
                  "Authentication",
                  "CapabilityDelegation",
                  "CapabilityInvocation",
                  "AssertionMethod"
                ]
              },
              "DidSignature": {
                "_enum": {
                  "Ed25519": "Ed25519Signature",
                  "Sr25519": "Sr25519Signature"
                }
              },
              "StorageError": {
                "_enum": {
                  "DidAlreadyPresent": "Null",
                  "DidNotPresent": "Null",
                  "DidKeyNotPresent": "DidVerificationKeyRelationship",
                  "KeyNotPresent": "Null",
                  "CurrentlyActiveKey": "Null",
                  "MaxPublicKeysPerDidExceeded": "Null",
                  "MaxTotalKeyAgreementKeysExceeded": "Null",
                  "DidAlreadyDeleted": "Null"
                }
              },
              "SignatureError": {
                "_enum": [
                  "InvalidSignatureFormat",
                  "InvalidSignature",
                  "InvalidNonce",
                  "TransactionExpired"
                ]
              },
              "KeyError": {
                "_enum": [
                  "InvalidVerificationKeyFormat",
                  "InvalidEncryptionKeyFormat"
                ]
              },
              "InputError": {
                "_enum": [
                  "MaxKeyAgreementKeysLimitExceeded",
                  "MaxVerificationKeysToRemoveLimitExceeded"
                ]
              },
              "DidPublicKeyDetails": {
                "key": "DidPublicKey",
                "blockNumber": "BlockNumber"
              },
              "DidNewKeyAgreementKeys": "BoundedBTreeSet<DidEncryptionKey, MaxNewKeyAgreementKeys>",
              "DidKeyAgreementKeys": "BoundedBTreeSet<KeyIdOf, MaxTotalKeyAgreementKeys>",
              "DidVerificationKeysToRevoke": "BoundedBTreeSet<KeyIdOf, MaxVerificationKeysToRevoke>",
              "MaxNewKeyAgreementKeys": "u32",
              "MaxTotalKeyAgreementKeys": "u32",
              "MaxVerificationKeysToRevoke": "u32",
              "MaxPublicKeysPerDid": "u32",
              "DidPublicKeyMap": "BoundedBTreeMap<KeyIdOf, DidPublicKeyDetails, MaxPublicKeysPerDid>",
              "DidCreationDetails": {
                "did": "DidIdentifierOf",
                "submitter": "AccountId",
                "newKeyAgreementKey": "DidEncryptionKey",
                "newAssertionKey": "Option<DidVerificationKey>",
                "newDelegationKey": "Option<DidVerificationKey>"
              },
              "DidDetails": {
                "authenticationKey": "KeyIdOf",
                "keyAgreementKeys": "DidKeyAgreementKeys",
                "capabilityDelegationKey": "Option<KeyIdOf>",
                "assertionMethodKey": "Option<KeyIdOf>",
                "publicKeys": "DidPublicKeyMap",
                "lastTxCounter": "u64"
              },
              "DidDeletionOperation": {
                "did": "DidIdentifierOf",
                "txCounter": "u64"
              },
              "DidAuthorizedCallOperation": {
                "did": "DidIdentifierOf",
                "txCounter": "u64",
                "call": "DidCallableOf",
                "blockNumber": "BlockNumber",
                "submitter": "AccountId"
              }
            }
          },
          {
            "minmax": [
              8000,
              null
            ],
            "types": {
              "RawDidLinkedInfo": {
                "identifier": "AccountId32",
                "w3n": "Option<Text>",
                "serviceEndpoints": "Vec<PalletDidServiceEndpointsDidEndpoint>",
                "details": "PalletDidDidDetails"
              }
            }
          }
        ]
      }
    }
  }
} as unknown as OverrideBundleType;
